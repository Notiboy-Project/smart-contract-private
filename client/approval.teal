#pragma version 8
txn ApplicationID
int 0
==
bnz main_l33
txn OnCompletion
int OptIn
==
bnz main_l29
txn OnCompletion
int CloseOut
==
bnz main_l25
txn OnCompletion
int UpdateApplication
==
bnz main_l24
txn OnCompletion
int DeleteApplication
==
bnz main_l23
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txn NumAppArgs
int 0
==
bnz main_l22
txna ApplicationArgs 0
byte "bootstrap"
==
bnz main_l18
txna ApplicationArgs 0
byte "test"
==
bnz main_l17
txna ApplicationArgs 0
byte "pub_notify"
==
bnz main_l16
txna ApplicationArgs 0
byte "pvt_notify"
==
bnz main_l15
txna ApplicationArgs 0
byte "verify"
==
bnz main_l14
err
main_l14:
callsub isvalid_1
txn NumAppArgs
int 2
==
&&
txn NumAccounts
int 1
==
&&
txna Accounts 1
global CurrentApplicationID
app_opted_in
&&
callsub iscreator_0
&&
txna ApplicationArgs 1
app_global_get
len
int 65
>=
&&
txna ApplicationArgs 1
app_global_get
extract 33 32
txna Accounts 1
==
&&
assert
callsub markdappverified_20
return
main_l15:
callsub isvalidprivatenotification_9
assert
gtxn 0 NumAccounts
int 1
==
assert
txna Accounts 1
global CurrentApplicationID
app_opted_in
assert
txna Accounts 1
callsub loadidxfromlstate_22
btoi
int 1
+
int 32
%
itob
store 0
txna Accounts 1
load 0
app_local_del
txna Accounts 1
byte "index"
load 0
app_local_put
txn Sender
callsub incmsgcount_21
txna Accounts 1
callsub incmsgcount_21
callsub constructmsg_26
store 1
int 1
return
main_l16:
callsub isvalidpublicnotification_12
assert
callsub sendpublicmsg_13
int 1
return
main_l17:
byte "notiboy"
box_del
pop
int 1
return
main_l18:
callsub isvalid_1
assert
callsub iscreator_0
assert
byte "index"
int 0
itob
app_global_put
byte "notiboy"
int 32768
box_create
assert
int 0
store 2
main_l19:
load 2
int 32
<
bnz main_l21
int 1
return
main_l21:
byte "notiboy"
load 2
int 1024
*
byte "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
int 0
int 1024
extract3
box_replace
load 2
int 1
+
store 2
b main_l19
main_l22:
int 1
return
main_l23:
callsub isvalid_1
assert
callsub iscreator_0
return
main_l24:
callsub isvalid_1
assert
callsub iscreator_0
return
main_l25:
callsub isvalidbaseoptout_3
assert
gtxn 0 NumAppArgs
int 4
==
gtxn 0 NumApplications
int 1
==
&&
gtxna 0 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l28
callsub isvaliduseroptout_4
assert
callsub deregisteruser_17
main_l27:
int 1
return
main_l28:
callsub isvalidcreatoroptout_5
assert
callsub deregisterdapp_16
b main_l27
main_l29:
callsub isvalidbaseoptin_6
assert
gtxn 1 NumAppArgs
int 3
==
gtxn 1 NumApplications
int 1
==
&&
gtxna 1 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l32
callsub isvaliduseroptin_7
assert
callsub registeruser_18
main_l31:
int 1
return
main_l32:
callsub isvalidcreatoroptin_8
assert
callsub registerdapp_14
b main_l31
main_l33:
callsub isvalid_1
assert
int 1
return

// is_creator
iscreator_0:
txn Sender
global CreatorAddress
==
retsub

// is_valid
isvalid_1:
txn RekeyTo
global ZeroAddress
==
retsub

// sender_from_gstate
senderfromgstate_2:
store 3
load 3
app_global_get
extract 0 32
retsub

// is_valid_base_optout
isvalidbaseoptout_3:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
gtxn 2 RekeyTo
global ZeroAddress
==
&&
gtxn 3 RekeyTo
global ZeroAddress
==
&&
gtxn 0 TypeEnum
int appl
==
&&
gtxn 0 OnCompletion
int CloseOut
==
&&
gtxn 1 TypeEnum
int appl
==
&&
gtxn 1 OnCompletion
int NoOp
==
&&
gtxn 2 TypeEnum
int appl
==
&&
gtxn 2 OnCompletion
int NoOp
==
&&
gtxn 3 TypeEnum
int appl
==
&&
gtxn 3 OnCompletion
int NoOp
==
&&
retsub

// is_valid_user_optout
isvaliduseroptout_4:
global GroupSize
int 4
==
retsub

// is_valid_creator_optout
isvalidcreatoroptout_5:
gtxn 4 RekeyTo
global ZeroAddress
==
global GroupSize
int 5
==
&&
gtxn 4 TypeEnum
int appl
==
&&
gtxn 4 OnCompletion
int NoOp
==
&&
retsub

// is_valid_base_optin
isvalidbaseoptin_6:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
gtxn 2 RekeyTo
global ZeroAddress
==
&&
gtxn 3 RekeyTo
global ZeroAddress
==
&&
gtxn 4 RekeyTo
global ZeroAddress
==
&&
gtxn 0 TypeEnum
int pay
==
&&
gtxn 0 Receiver
addr 3KOQUDTQAYKMXFL66Q5DS27FJJS6O3E2J3YMOC3WJRWNWJW3J4Q65POKPI
==
&&
gtxn 1 TypeEnum
int appl
==
&&
gtxn 1 OnCompletion
int OptIn
==
&&
gtxn 2 TypeEnum
int appl
==
&&
gtxn 2 OnCompletion
int NoOp
==
&&
gtxn 3 TypeEnum
int appl
==
&&
gtxn 3 OnCompletion
int NoOp
==
&&
gtxn 4 TypeEnum
int appl
==
&&
gtxn 4 OnCompletion
int NoOp
==
&&
retsub

// is_valid_user_optin
isvaliduseroptin_7:
global GroupSize
int 5
==
retsub

// is_valid_creator_optin
isvalidcreatoroptin_8:
gtxn 5 RekeyTo
global ZeroAddress
==
global GroupSize
int 6
==
&&
gtxn 5 TypeEnum
int appl
==
&&
gtxn 5 OnCompletion
int NoOp
==
&&
retsub

// is_valid_private_notification
isvalidprivatenotification_9:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
gtxn 2 RekeyTo
global ZeroAddress
==
&&
gtxn 3 RekeyTo
global ZeroAddress
==
&&
gtxn 4 RekeyTo
global ZeroAddress
==
&&
gtxn 0 NumAppArgs
int 2
==
&&
gtxn 0 TypeEnum
int appl
==
&&
gtxn 0 OnCompletion
int NoOp
==
&&
gtxn 1 TypeEnum
int appl
==
&&
gtxn 1 OnCompletion
int NoOp
==
&&
gtxn 2 TypeEnum
int appl
==
&&
gtxn 2 OnCompletion
int NoOp
==
&&
gtxn 3 TypeEnum
int appl
==
&&
gtxn 3 OnCompletion
int NoOp
==
&&
gtxn 4 TypeEnum
int appl
==
&&
gtxn 4 OnCompletion
int NoOp
==
&&
global GroupSize
int 5
==
&&
gtxn 0 Sender
gtxna 0 ApplicationArgs 1
callsub senderfromgstate_2
==
&&
gtxn 0 Sender
global CurrentApplicationID
app_opted_in
int 1
==
&&
retsub

// sanitize_dapp_name
sanitizedappname_10:
store 21
store 20
load 20
load 21
callsub trimstring_11
store 22
load 22
len
int 10
<
bz sanitizedappname_10_l2
byte "::::::::::"
int 0
int 10
load 22
len
-
extract3
load 22
concat
store 22
sanitizedappname_10_l2:
load 22
retsub

// trim_string
trimstring_11:
store 8
store 7
load 7
len
load 8
>
bnz trimstring_11_l2
load 7
b trimstring_11_l3
trimstring_11_l2:
load 7
int 0
load 8
extract3
trimstring_11_l3:
retsub

// is_valid_public_notification
isvalidpublicnotification_12:
global GroupSize
int 1
==
txn NumAppArgs
int 1
==
&&
txn NumApplications
int 1
==
&&
txn RekeyTo
global ZeroAddress
==
&&
txn TypeEnum
int appl
==
&&
txn OnCompletion
int NoOp
==
&&
retsub

// send_public_msg
sendpublicmsg_13:
txna Applications 1
app_params_get AppCreator
store 5
store 4
load 5
load 4
txn Sender
==
&&
txn Sender
global CurrentApplicationID
app_opted_in
&&
assert
txn Sender
callsub loadidxfromlstate_22
btoi
int 1
+
int 14
%
itob
store 6
txn Sender
load 6
app_local_del
txn Sender
byte "index"
load 6
app_local_put
txn Sender
callsub incmsgcount_21
txn Sender
load 6
txn Note
int 120
callsub trimstring_11
app_local_put
retsub

// register_dapp
registerdapp_14:
gtxna 1 ApplicationArgs 1
int 10
callsub sanitizedappname_10
store 15
txna Applications 1
app_params_get AppCreator
store 17
store 16
gtxn 1 NumAppArgs
int 3
==
gtxn 1 NumApplications
int 1
==
&&
gtxna 1 ApplicationArgs 0
byte "dapp"
==
&&
load 17
&&
load 16
gtxn 1 Sender
==
&&
gtxn 0 Amount
int 1000000
>=
&&
assert
callsub loadidxgstate_23
btoi
int 1
+
int 32768
int 23
/
%
itob
store 18
load 18
callsub setidxgstate_24
load 15
txna Applications 1
itob
concat
load 18
extract 4 4
concat
byte "u"
concat
store 19
byte "notiboy"
load 18
load 19
int 23
int 0
callsub writetobox_27
int 1
return

// is_creator_onboarded
iscreatoronboarded_15:
store 40
store 39
store 38
load 38
load 40
concat
store 41
load 41
pop
byte "notiboy"
load 39
load 41
len
box_extract
load 41
b==
retsub

// deregister_dapp
deregisterdapp_16:
txna Applications 1
app_params_get AppCreator
store 36
store 35
txn NumAppArgs
int 4
==
txn NumApplications
int 1
==
&&
txna ApplicationArgs 0
byte "dapp"
==
&&
load 36
&&
load 35
txn Sender
==
&&
assert
txna ApplicationArgs 1
int 10
callsub sanitizedappname_10
store 34
txna ApplicationArgs 3
btoi
int 23
*
store 37
load 34
load 37
txna Applications 1
itob
callsub iscreatoronboarded_15
bnz deregisterdapp_16_l2
int 0
return
deregisterdapp_16_l2:
byte "notiboy"
load 37
byte
extract 0 23
box_replace
retsub

// deregister_user
deregisteruser_17:
gtxn 0 Sender
box_del
assert
int 1
return

// register_user
registeruser_18:
gtxn 1 NumAppArgs
int 1
==
gtxna 1 ApplicationArgs 0
byte "user"
==
&&
gtxn 0 Amount
int 1000000
>=
&&
assert
gtxn 0 Sender
int 32768
box_create
assert
txn Sender
byte "msgcount"
int 0
itob
app_local_put
txn Sender
byte "index"
int 0
itob
app_local_put
int 1
return

// is_verified
isverified_19:
txna ApplicationArgs 1
app_global_get
len
int 65
==
bnz isverified_19_l4
txna ApplicationArgs 1
app_global_get
len
int 67
==
txna ApplicationArgs 1
app_global_get
extract 66 1
byte "v"
==
&&
bnz isverified_19_l3
int 0
b isverified_19_l5
isverified_19_l3:
int 1
b isverified_19_l5
isverified_19_l4:
int 0
isverified_19_l5:
retsub

// mark_dapp_verified
markdappverified_20:
txna ApplicationArgs 1
app_global_get
store 42
callsub isverified_19
!
bz markdappverified_20_l2
txna ApplicationArgs 1
app_global_del
txna ApplicationArgs 1
load 42
byte ":v"
concat
app_global_put
int 1
return
markdappverified_20_l2:
int 1
return

// inc_msg_count
incmsgcount_21:
store 9
load 9
global CurrentApplicationID
byte "msgcount"
app_local_get_ex
store 11
store 10
load 11
!
bz incmsgcount_21_l2
load 9
byte "msgcount"
int 0
itob
app_local_put
incmsgcount_21_l2:
load 9
byte "msgcount"
load 9
byte "msgcount"
app_local_get
btoi
int 1
+
itob
app_local_put
retsub

// load_idx_from_lstate
loadidxfromlstate_22:
store 12
load 12
global CurrentApplicationID
byte "index"
app_local_get_ex
store 14
store 13
load 14
!
bz loadidxfromlstate_22_l2
load 12
byte "index"
int 0
itob
app_local_put
loadidxfromlstate_22_l2:
load 12
byte "index"
app_local_get
retsub

// load_idx_gstate
loadidxgstate_23:
global CurrentApplicationID
byte "index"
app_global_get_ex
store 24
store 23
load 24
!
bz loadidxgstate_23_l2
byte "index"
int 0
itob
app_global_put
loadidxgstate_23_l2:
byte "index"
app_global_get
retsub

// set_idx_gstate
setidxgstate_24:
store 25
byte "index"
load 25
app_global_put
retsub

// min_val
minval_25:
store 33
store 32
load 32
load 33
>
bnz minval_25_l2
load 32
b minval_25_l3
minval_25_l2:
load 33
minval_25_l3:
retsub

// construct_msg
constructmsg_26:
global LatestTimestamp
itob
gtxna 0 ApplicationArgs 1
concat
byte ":"
concat
gtxn 0 Note
int 0
int 1008
gtxn 0 Note
len
callsub minval_25
extract3
concat
retsub

// write_to_box
writetobox_27:
store 30
store 29
store 28
store 27
store 26
load 27
btoi
load 29
*
store 31
load 30
int 0
==
bz writetobox_27_l2
load 26
load 31
load 29
box_extract
byte
int 0
load 29
extract3
==
assert
writetobox_27_l2:
load 26
load 31
byte
int 0
load 29
extract3
box_replace
load 26
load 31
load 28
int 0
load 29
load 28
len
callsub minval_25
extract3
box_replace
retsub