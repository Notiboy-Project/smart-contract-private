#pragma version 8
txn ApplicationID
int 0
==
bnz main_l35
txn OnCompletion
int OptIn
==
bnz main_l31
txn OnCompletion
int CloseOut
==
bnz main_l27
txn OnCompletion
int UpdateApplication
==
bnz main_l26
txn OnCompletion
int DeleteApplication
==
bnz main_l25
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txn NumAppArgs
int 0
==
bnz main_l24
txna ApplicationArgs 0
byte "bootstrap"
==
bnz main_l20
txna ApplicationArgs 0
byte "test"
==
bnz main_l19
txna ApplicationArgs 0
byte "pub_notify"
==
bnz main_l18
txna ApplicationArgs 0
byte "pvt_notify"
==
bnz main_l17
txna ApplicationArgs 0
byte "verify"
==
bnz main_l16
txna ApplicationArgs 0
byte "unverify"
==
bnz main_l15
err
main_l15:
callsub ischannelvalidforverification_23
assert
callsub markchannelunverified_26
return
main_l16:
callsub ischannelvalidforverification_23
assert
callsub markchannelverified_25
return
main_l17:
callsub isvalidprivatenotification_27
assert
callsub sendpersonalmsg_30
int 1
return
main_l18:
callsub isvalidpublicnotification_28
assert
callsub sendpublicmsg_29
int 1
return
main_l19:
callsub isvalid_2
callsub iscreator_1
&&
assert
byte "notiboy"
box_del
pop
int 1
return
main_l20:
callsub isvalid_2
callsub iscreator_1
&&
assert
byte "index"
int 0
itob
app_global_put
byte "notiboy"
int 32768
box_create
assert
int 0
store 0
main_l21:
load 0
int 32
<
bnz main_l23
int 1
return
main_l23:
byte "notiboy"
load 0
int 1024
*
byte
int 0
int 1024
extract3
box_replace
load 0
int 1
+
store 0
b main_l21
main_l24:
int 0
int 0
callsub validaterekeys_4
int 1
return
main_l25:
callsub isvalid_2
assert
callsub iscreator_1
return
main_l26:
callsub isvalid_2
assert
callsub iscreator_1
return
main_l27:
callsub isvalidbaseoptout_3
assert
gtxn 0 NumAppArgs
int 3
==
gtxn 0 NumApplications
int 1
==
&&
gtxna 0 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l30
callsub isvaliduseroptout_20
assert
callsub deregisteruser_21
main_l29:
int 1
return
main_l30:
callsub isvalidcreatoroptout_15
assert
callsub deregisterdapp_18
b main_l29
main_l31:
callsub isvalidbaseoptin_6
assert
gtxn 1 NumAppArgs
int 2
==
gtxn 1 NumApplications
int 1
==
&&
gtxna 1 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l34
callsub isvaliduseroptin_19
assert
callsub registeruser_22
main_l33:
int 1
return
main_l34:
callsub isvalidcreatoroptin_16
assert
callsub registerdapp_17
b main_l33
main_l35:
callsub isvalid_2
assert
int 1
return

// is_creator_onboarded
iscreatoronboarded_0:
store 34
store 33
store 32
load 32
load 34
concat
store 35
load 35
pop
byte "notiboy"
load 33
load 35
len
box_extract
load 35
b==
retsub

// is_creator
iscreator_1:
txn Sender
global CreatorAddress
==
retsub

// is_valid
isvalid_2:
txn RekeyTo
global ZeroAddress
==
retsub

// is_valid_base_optout
isvalidbaseoptout_3:
gtxn 0 TypeEnum
int appl
==
gtxn 0 OnCompletion
int CloseOut
==
&&
retsub

// validate_rekeys
validaterekeys_4:
store 2
store 1
load 1
store 3
validaterekeys_4_l1:
load 3
load 2
<=
bz validaterekeys_4_l3
load 3
gtxns RekeyTo
global ZeroAddress
==
assert
load 3
int 1
+
store 3
b validaterekeys_4_l1
validaterekeys_4_l3:
retsub

// validate_noops
validatenoops_5:
store 5
store 4
load 4
store 6
validatenoops_5_l1:
load 6
load 5
<=
bz validatenoops_5_l3
load 4
gtxns TypeEnum
int appl
==
load 4
gtxns OnCompletion
int NoOp
==
&&
assert
load 6
int 1
+
store 6
b validatenoops_5_l1
validatenoops_5_l3:
retsub

// is_valid_base_optin
isvalidbaseoptin_6:
gtxn 0 TypeEnum
int pay
==
gtxn 0 Receiver
addr PMJ44TV52KSPIP6RMTPCEPXTFWKGCNQ2YDTYXQYDXU2OG7CMHZXEAN4W2E
==
&&
gtxn 1 TypeEnum
int appl
==
&&
gtxn 1 OnCompletion
int OptIn
==
&&
retsub

// sanitize_dapp_name
sanitizedappname_7:
store 13
store 12
load 12
load 13
callsub trimstring_8
store 14
load 14
len
int 10
<
bz sanitizedappname_7_l2
byte "::::::::::"
int 0
int 10
load 14
len
-
extract3
load 14
concat
store 14
sanitizedappname_7_l2:
load 14
retsub

// trim_string
trimstring_8:
store 16
store 15
load 15
len
load 16
>
bnz trimstring_8_l2
load 15
b trimstring_8_l3
trimstring_8_l2:
load 15
int 0
load 16
extract3
trimstring_8_l3:
retsub

// load_idx_from_lstate
loadidxfromlstate_9:
store 45
load 45
global CurrentApplicationID
byte "index"
app_local_get_ex
store 47
store 46
load 47
!
bz loadidxfromlstate_9_l2
load 45
byte "index"
int 0
itob
app_local_put
loadidxfromlstate_9_l2:
load 45
byte "index"
app_local_get
retsub

// load_idx_gstate
loadidxgstate_10:
global CurrentApplicationID
byte "index"
app_global_get_ex
store 18
store 17
load 18
!
bz loadidxgstate_10_l2
byte "index"
int 0
itob
app_global_put
loadidxgstate_10_l2:
byte "index"
app_global_get
retsub

// set_idx_gstate
setidxgstate_11:
store 19
byte "index"
load 19
app_global_put
retsub

// min_val
minval_12:
store 27
store 26
load 26
load 27
>
bnz minval_12_l2
load 26
b minval_12_l3
minval_12_l2:
load 27
minval_12_l3:
retsub

// inc_msg_count
incmsgcount_13:
store 48
load 48
global CurrentApplicationID
byte "msgcount"
app_local_get_ex
store 50
store 49
load 50
!
bz incmsgcount_13_l2
load 48
byte "msgcount"
int 0
itob
app_local_put
incmsgcount_13_l2:
load 48
byte "msgcount"
load 48
byte "msgcount"
app_local_get
btoi
int 1
+
itob
app_local_put
retsub

// write_to_box
writetobox_14:
store 24
store 23
store 22
store 21
store 20
load 21
btoi
load 23
*
store 25
load 24
int 0
==
bz writetobox_14_l2
load 20
load 25
load 23
box_extract
byte
int 0
load 23
extract3
==
assert
writetobox_14_l2:
load 20
load 25
byte
int 0
load 23
extract3
box_replace
load 20
load 25
load 22
int 0
load 23
load 22
len
callsub minval_12
extract3
box_replace
retsub

// is_valid_creator_optout
isvalidcreatoroptout_15:
int 0
int 4
callsub validaterekeys_4
int 1
int 4
callsub validatenoops_5
global GroupSize
int 5
==
retsub

// is_valid_creator_optin
isvalidcreatoroptin_16:
int 0
int 5
callsub validaterekeys_4
int 2
int 5
callsub validatenoops_5
global GroupSize
int 6
==
retsub

// register_dapp
registerdapp_17:
txna ApplicationArgs 1
int 10
callsub sanitizedappname_7
store 7
txna Applications 1
app_params_get AppCreator
store 9
store 8
txn NumAppArgs
int 2
==
txn NumApplications
int 1
==
&&
txna ApplicationArgs 0
byte "dapp"
==
&&
load 9
&&
load 8
txn Sender
==
&&
gtxn 0 Amount
int 1000000
>=
&&
assert
callsub loadidxgstate_10
btoi
int 1
+
int 32768
int 23
/
%
itob
store 10
load 10
callsub setidxgstate_11
load 7
txna Applications 1
itob
concat
load 10
extract 4 4
concat
byte "u"
concat
store 11
byte "notiboy"
load 10
load 11
int 23
int 0
callsub writetobox_14
int 1
return

// deregister_dapp
deregisterdapp_18:
txna Applications 1
app_params_get AppCreator
store 30
store 29
txn NumAppArgs
int 3
==
txn NumApplications
int 1
==
&&
txna ApplicationArgs 0
byte "dapp"
==
&&
load 30
&&
load 29
txn Sender
==
&&
assert
txna ApplicationArgs 1
int 10
callsub sanitizedappname_7
store 28
txna ApplicationArgs 2
btoi
int 23
*
store 31
load 28
load 31
txna Applications 1
itob
callsub iscreatoronboarded_0
bnz deregisterdapp_18_l2
int 0
return
deregisterdapp_18_l2:
byte "notiboy"
load 31
byte
extract 0 23
box_replace
retsub

// is_valid_user_optin
isvaliduseroptin_19:
int 0
int 2
callsub validaterekeys_4
int 2
int 2
callsub validatenoops_5
global GroupSize
int 3
==
retsub

// is_valid_user_optout
isvaliduseroptout_20:
int 0
int 1
callsub validaterekeys_4
int 1
int 1
callsub validatenoops_5
global GroupSize
int 2
==
retsub

// deregister_user
deregisteruser_21:
gtxn 0 Sender
box_del
assert
int 1
return

// register_user
registeruser_22:
gtxn 1 NumAppArgs
int 1
==
gtxna 1 ApplicationArgs 0
byte "user"
==
&&
gtxn 0 Amount
int 1000000
>=
&&
assert
gtxn 0 Sender
int 14336
box_create
assert
txn Sender
byte "msgcount"
int 0
itob
app_local_put
txn Sender
byte "index"
int 0
itob
app_local_put
int 1
return

// is_channel_valid_for_verification
ischannelvalidforverification_23:
int 0
int 4
callsub validaterekeys_4
int 0
int 4
callsub validatenoops_5
txna ApplicationArgs 1
int 10
callsub sanitizedappname_7
store 36
txna ApplicationArgs 2
btoi
int 23
*
store 37
global GroupSize
int 5
==
txn NumAppArgs
int 3
==
&&
txn NumApplications
int 1
==
&&
callsub iscreator_1
&&
load 36
load 37
txna Applications 1
itob
callsub iscreatoronboarded_0
&&
retsub

// set_verify_bit
setverifybit_24:
store 38
txna ApplicationArgs 1
int 10
callsub sanitizedappname_7
store 39
txna ApplicationArgs 2
btoi
int 23
*
store 40
load 39
txna Applications 1
itob
concat
txna ApplicationArgs 2
extract 4 4
concat
load 38
concat
store 41
byte "notiboy"
txna ApplicationArgs 2
load 41
int 23
int 1
callsub writetobox_14
int 1
return

// mark_channel_verified
markchannelverified_25:
byte "v"
callsub setverifybit_24
retsub

// mark_channel_unverified
markchannelunverified_26:
byte "u"
callsub setverifybit_24
retsub

// is_valid_private_notification
isvalidprivatenotification_27:
int 0
int 1
callsub validatenoops_5
int 0
int 1
callsub validaterekeys_4
txna Accounts 1
global CurrentApplicationID
app_opted_in
txna Accounts 1
txna Applications 1
app_opted_in
&&
txn Sender
global CurrentApplicationID
app_opted_in
&&
txn NumAccounts
int 1
==
&&
txn NumAppArgs
int 3
==
&&
txn NumApplications
int 1
==
&&
global GroupSize
int 2
==
&&
retsub

// is_valid_public_notification
isvalidpublicnotification_28:
global GroupSize
int 1
==
txn NumAppArgs
int 1
==
&&
txn NumApplications
int 1
==
&&
txn RekeyTo
global ZeroAddress
==
&&
txn TypeEnum
int appl
==
&&
txn OnCompletion
int NoOp
==
&&
txn Sender
global CurrentApplicationID
app_opted_in
&&
retsub

// send_public_msg
sendpublicmsg_29:
txna Applications 1
app_params_get AppCreator
store 43
store 42
load 43
load 42
txn Sender
==
&&
assert
txn Sender
callsub loadidxfromlstate_9
btoi
int 1
+
int 14
%
itob
store 44
txn Sender
load 44
app_local_del
txn Sender
byte "index"
load 44
app_local_put
txn Sender
callsub incmsgcount_13
txn Sender
load 44
txn Note
int 120
callsub trimstring_8
app_local_put
retsub

// send_personal_msg
sendpersonalmsg_30:
txna Applications 1
app_params_get AppCreator
store 52
store 51
load 52
load 51
txn Sender
==
&&
assert
txna Accounts 1
callsub loadidxfromlstate_9
btoi
int 1
+
int 14336
int 296
/
%
itob
store 53
txna Accounts 1
byte "index"
load 53
app_local_put
txn Sender
callsub incmsgcount_13
txna Accounts 1
callsub incmsgcount_13
global LatestTimestamp
itob
txna Applications 1
itob
concat
txn Note
int 0
int 280
txn Note
len
callsub minval_12
extract3
concat
store 54
txna Accounts 1
load 53
load 54
int 296
int 1
callsub writetobox_14
retsub