#pragma version 8
txn ApplicationID
int 0
==
bnz main_l35
txn OnCompletion
int OptIn
==
bnz main_l31
txn OnCompletion
int CloseOut
==
bnz main_l27
txn OnCompletion
int UpdateApplication
==
bnz main_l26
txn OnCompletion
int DeleteApplication
==
bnz main_l25
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txn NumAppArgs
int 0
==
bnz main_l24
txna ApplicationArgs 0
byte "bootstrap"
==
bnz main_l20
txna ApplicationArgs 0
byte "test"
==
bnz main_l19
txna ApplicationArgs 0
byte "pub_notify"
==
bnz main_l16
txna ApplicationArgs 0
byte "pvt_notify"
==
bnz main_l15
txna ApplicationArgs 0
byte "verify"
==
bnz main_l14
err
main_l14:
callsub isvalid_1
txn NumAppArgs
int 2
==
&&
txn NumAccounts
int 1
==
&&
txna Accounts 1
global CurrentApplicationID
app_opted_in
&&
callsub iscreator_0
&&
txna ApplicationArgs 1
app_global_get
len
int 65
>=
&&
txna ApplicationArgs 1
app_global_get
extract 33 32
txna Accounts 1
==
&&
assert
callsub markdappverified_12
return
main_l15:
callsub isvalidprivatenotification_4
assert
gtxn 0 NumAccounts
int 1
==
assert
txna Accounts 1
global CurrentApplicationID
app_opted_in
assert
txna Accounts 1
callsub loadidxfromlstate_14
btoi
int 1
+
int 32
%
itob
store 0
txna Accounts 1
load 0
app_local_del
txna Accounts 1
byte "index"
load 0
app_local_put
txn Sender
callsub incmsgcount_13
txna Accounts 1
callsub incmsgcount_13
callsub constructmsg_18
store 1
load 0
load 1
callsub writemsg_19
int 1
return
main_l16:
callsub isvalidpublicnotification_5
assert
txn Sender
callsub loadidxfromlstate_14
btoi
int 1
+
int 16
%
itob
store 2
load 2
btoi
int 0
==
bnz main_l18
main_l17:
txn Sender
load 2
app_local_del
txn Sender
byte "index"
load 2
app_local_put
txn Sender
load 2
txn TxID
app_local_put
int 1
return
main_l18:
int 1
itob
store 2
b main_l17
main_l19:
byte "notiboy"
box_del
pop
int 1
return
main_l20:
callsub isvalid_1
assert
callsub iscreator_0
assert
byte "index"
int 0
itob
app_global_put
byte "dappcount"
int 1000
itob
app_global_put
byte "notiboy"
int 32768
box_create
assert
int 0
store 3
main_l21:
load 3
int 32
<
bnz main_l23
int 1
return
main_l23:
byte "notiboy"
load 3
int 1024
*
byte "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
int 0
int 1024
extract3
box_replace
load 3
int 1
+
store 3
b main_l21
main_l24:
int 1
return
main_l25:
callsub isvalid_1
assert
callsub iscreator_0
return
main_l26:
callsub isvalid_1
assert
callsub iscreator_0
return
main_l27:
gtxn 0 NumAppArgs
int 4
==
gtxn 0 NumApplications
int 1
==
&&
gtxna 0 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l30
callsub deregisteruser_9
main_l29:
int 1
return
main_l30:
callsub deregisterdapp_8
b main_l29
main_l31:
callsub isvalidoptin_3
assert
gtxn 1 NumAppArgs
int 3
==
gtxn 5 NumApplications
int 1
==
&&
gtxna 1 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l34
callsub registeruser_10
main_l33:
int 1
return
main_l34:
callsub registerdapp_7
b main_l33
main_l35:
callsub isvalid_1
assert
int 1
return

// is_creator
iscreator_0:
txn Sender
global CreatorAddress
==
retsub

// is_valid
isvalid_1:
txn RekeyTo
global ZeroAddress
==
retsub

// sender_from_gstate
senderfromgstate_2:
store 4
load 4
app_global_get
extract 0 32
retsub

// is_valid_optin
isvalidoptin_3:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
gtxn 2 RekeyTo
global ZeroAddress
==
&&
gtxn 3 RekeyTo
global ZeroAddress
==
&&
gtxn 4 RekeyTo
global ZeroAddress
==
&&
gtxn 5 RekeyTo
global ZeroAddress
==
&&
global GroupSize
int 6
==
&&
gtxn 0 TypeEnum
int pay
==
&&
gtxn 0 Receiver
addr 3KOQUDTQAYKMXFL66Q5DS27FJJS6O3E2J3YMOC3WJRWNWJW3J4Q65POKPI
==
&&
gtxn 1 TypeEnum
int appl
==
&&
gtxn 1 OnCompletion
int OptIn
==
&&
gtxn 2 TypeEnum
int appl
==
&&
gtxn 2 OnCompletion
int NoOp
==
&&
gtxn 3 TypeEnum
int appl
==
&&
gtxn 3 OnCompletion
int NoOp
==
&&
gtxn 4 TypeEnum
int appl
==
&&
gtxn 4 OnCompletion
int NoOp
==
&&
gtxn 5 TypeEnum
int appl
==
&&
gtxn 5 OnCompletion
int NoOp
==
&&
retsub

// is_valid_private_notification
isvalidprivatenotification_4:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
gtxn 2 RekeyTo
global ZeroAddress
==
&&
gtxn 3 RekeyTo
global ZeroAddress
==
&&
gtxn 4 RekeyTo
global ZeroAddress
==
&&
gtxn 0 NumAppArgs
int 2
==
&&
gtxn 0 TypeEnum
int appl
==
&&
gtxn 0 OnCompletion
int NoOp
==
&&
gtxn 1 TypeEnum
int appl
==
&&
gtxn 1 OnCompletion
int NoOp
==
&&
gtxn 2 TypeEnum
int appl
==
&&
gtxn 2 OnCompletion
int NoOp
==
&&
gtxn 3 TypeEnum
int appl
==
&&
gtxn 3 OnCompletion
int NoOp
==
&&
gtxn 4 TypeEnum
int appl
==
&&
gtxn 4 OnCompletion
int NoOp
==
&&
global GroupSize
int 5
==
&&
gtxn 0 Sender
gtxna 0 ApplicationArgs 1
callsub senderfromgstate_2
==
&&
gtxn 0 Sender
global CurrentApplicationID
app_opted_in
int 1
==
&&
retsub

// is_valid_public_notification
isvalidpublicnotification_5:
global GroupSize
int 1
==
txn NumAppArgs
int 2
==
&&
txn RekeyTo
global ZeroAddress
==
&&
txn TypeEnum
int appl
==
&&
txn OnCompletion
int NoOp
==
&&
txn Sender
txna ApplicationArgs 1
callsub senderfromgstate_2
==
&&
txn Sender
global CurrentApplicationID
app_opted_in
int 1
==
&&
retsub

// dapp_name
dappname_6:
store 12
load 12
len
int 10
>
bnz dappname_6_l2
load 12
b dappname_6_l3
dappname_6_l2:
load 12
extract 0 10
dappname_6_l3:
retsub

// register_dapp
registerdapp_7:
gtxna 1 ApplicationArgs 1
callsub dappname_6
store 5
txna Applications 1
app_params_get AppCreator
store 9
store 8
gtxn 1 NumAppArgs
int 3
==
gtxn 5 NumApplications
int 1
==
&&
gtxna 1 ApplicationArgs 0
byte "dapp"
==
&&
load 9
&&
load 8
gtxn 5 Sender
==
&&
gtxn 0 Amount
int 1000000
>=
&&
assert
byte "dappcount"
app_global_get
btoi
store 7
load 7
int 1
+
itob
store 6
byte "dappcount"
load 6
app_global_put
callsub loadidxgstate_15
btoi
int 1
+
int 1365
%
itob
store 10
load 10
callsub setidxgstate_16
load 5
byte ":"
concat
gtxna 1 ApplicationArgs 2
concat
byte ":"
concat
load 6
extract 4 4
concat
store 11
byte "notiboy"
load 10
load 11
int 24
int 0
callsub writetobox_20
int 1
return

// deregister_dapp
deregisterdapp_8:
byte "dappcount"
byte "dappcount"
app_global_get
btoi
int 1
-
itob
app_global_put
txna Applications 1
app_params_get AppCreator
store 26
store 25
gtxn 0 NumAppArgs
int 4
==
gtxn 0 NumApplications
int 1
==
&&
gtxna 0 ApplicationArgs 0
byte "dapp"
==
&&
load 26
&&
load 25
txn Sender
==
&&
assert
gtxna 0 ApplicationArgs 1
callsub dappname_6
store 24
load 24
byte ":"
concat
gtxna 0 ApplicationArgs 2
concat
byte ":"
concat
store 27
load 27
pop
gtxna 0 ApplicationArgs 3
btoi
int 24
*
store 28
load 28
itob
log
gtxna 0 ApplicationArgs 3
btoi
int 24
*
itob
log
gtxna 0 ApplicationArgs 3
btoi
itob
log
byte "notiboy"
load 28
load 27
len
box_extract
load 27
b==
bnz deregisterdapp_8_l2
int 0
return
deregisterdapp_8_l2:
byte "notiboy"
load 28
byte
extract 0 24
box_replace
retsub

// deregister_user
deregisteruser_9:
gtxn 0 Sender
box_del
assert
int 1
return

// register_user
registeruser_10:
gtxn 1 NumAppArgs
int 1
==
gtxna 1 ApplicationArgs 0
byte "user"
==
&&
gtxn 0 Amount
int 1000000
>=
&&
assert
gtxn 0 Sender
int 32768
box_create
assert
int 1
return

// is_verified
isverified_11:
txna ApplicationArgs 1
app_global_get
len
int 65
==
bnz isverified_11_l4
txna ApplicationArgs 1
app_global_get
len
int 67
==
txna ApplicationArgs 1
app_global_get
extract 66 1
byte "v"
==
&&
bnz isverified_11_l3
int 0
b isverified_11_l5
isverified_11_l3:
int 1
b isverified_11_l5
isverified_11_l4:
int 0
isverified_11_l5:
retsub

// mark_dapp_verified
markdappverified_12:
txna ApplicationArgs 1
app_global_get
store 29
callsub isverified_11
!
bz markdappverified_12_l2
txna ApplicationArgs 1
app_global_del
txna ApplicationArgs 1
load 29
byte ":v"
concat
app_global_put
int 1
return
markdappverified_12_l2:
int 1
return

// inc_msg_count
incmsgcount_13:
store 30
load 30
global CurrentApplicationID
byte "msgcount"
app_local_get_ex
store 32
store 31
load 32
!
bz incmsgcount_13_l2
load 30
byte "msgcount"
int 0
itob
app_local_put
incmsgcount_13_l2:
load 30
byte "msgcount"
load 30
byte "msgcount"
app_local_get
btoi
int 1
+
itob
app_local_put
retsub

// load_idx_from_lstate
loadidxfromlstate_14:
store 33
load 33
global CurrentApplicationID
byte "index"
app_local_get_ex
store 35
store 34
load 35
!
bz loadidxfromlstate_14_l2
load 33
byte "index"
int 0
itob
app_local_put
loadidxfromlstate_14_l2:
load 33
byte "index"
app_local_get
retsub

// load_idx_gstate
loadidxgstate_15:
global CurrentApplicationID
byte "index"
app_global_get_ex
store 14
store 13
load 14
!
bz loadidxgstate_15_l2
byte "index"
int 0
itob
app_global_put
loadidxgstate_15_l2:
byte "index"
app_global_get
retsub

// set_idx_gstate
setidxgstate_16:
store 15
byte "index"
load 15
app_global_put
retsub

// min_val
minval_17:
store 23
store 22
load 22
load 23
>
bnz minval_17_l2
load 22
b minval_17_l3
minval_17_l2:
load 23
minval_17_l3:
retsub

// construct_msg
constructmsg_18:
global LatestTimestamp
itob
gtxna 0 ApplicationArgs 1
concat
byte ":"
concat
gtxn 0 Note
int 0
int 1008
gtxn 0 Note
len
callsub minval_17
extract3
concat
retsub

// write_msg
writemsg_19:
store 37
store 36
load 36
btoi
int 1024
*
store 38
gtxna 0 Accounts 1
load 38
byte "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
int 0
byte
len
extract3
box_replace
gtxna 0 Accounts 1
load 38
load 37
box_replace
retsub

// write_to_box
writetobox_20:
store 20
store 19
store 18
store 17
store 16
load 17
btoi
load 19
*
store 21
load 20
int 0
==
bz writetobox_20_l2
load 16
load 21
load 19
box_extract
byte "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
int 0
load 19
extract3
==
assert
writetobox_20_l2:
load 16
load 21
byte
int 0
load 19
extract3
box_replace
load 16
load 21
load 18
int 0
load 19
load 18
len
callsub minval_17
extract3
box_replace
retsub