#pragma version 8
txn ApplicationID
int 0
==
bnz main_l35
txn OnCompletion
int OptIn
==
bnz main_l31
txn OnCompletion
int CloseOut
==
bnz main_l27
txn OnCompletion
int UpdateApplication
==
bnz main_l26
txn OnCompletion
int DeleteApplication
==
bnz main_l25
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txn NumAppArgs
int 0
==
bnz main_l24
txna ApplicationArgs 0
byte "bootstrap"
==
bnz main_l20
txna ApplicationArgs 0
byte "test"
==
bnz main_l19
txna ApplicationArgs 0
byte "pub_notify"
==
bnz main_l18
txna ApplicationArgs 0
byte "pvt_notify"
==
bnz main_l17
txna ApplicationArgs 0
byte "verify"
==
bnz main_l16
txna ApplicationArgs 0
byte "unverify"
==
bnz main_l15
err
main_l15:
callsub ischannelvalidforverification_26
assert
callsub markchannelunverified_29
return
main_l16:
callsub ischannelvalidforverification_26
assert
callsub markchannelverified_28
return
main_l17:
callsub isvalidprivatenotification_30
assert
callsub sendpersonalmsg_33
int 1
return
main_l18:
callsub isvalidpublicnotification_31
assert
callsub sendpublicmsg_32
int 1
return
main_l19:
callsub isvalid_5
callsub iscreator_4
&&
assert
byte "notiboy"
box_del
pop
int 1
return
main_l20:
callsub isvalid_5
callsub iscreator_4
&&
assert
byte "index"
int 0
itob
app_global_put
byte "notiboy"
int 32768
box_create
assert
int 0
store 0
main_l21:
load 0
int 32
<
bnz main_l23
int 1
return
main_l23:
byte "notiboy"
load 0
int 1024
*
byte
int 0
int 1024
extract3
box_replace
load 0
int 1
+
store 0
b main_l21
main_l24:
int 0
int 0
callsub validaterekeys_7
int 1
return
main_l25:
callsub isvalid_5
assert
callsub iscreator_4
return
main_l26:
callsub isvalid_5
assert
callsub iscreator_4
return
main_l27:
callsub isvalidbaseoptout_6
assert
gtxn 0 NumAppArgs
int 3
==
gtxn 0 NumApplications
int 1
==
&&
gtxna 0 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l30
callsub isvaliduseroptout_23
assert
callsub deregisteruser_24
main_l29:
int 1
return
main_l30:
callsub isvalidcreatoroptout_18
assert
callsub deregisterdapp_21
b main_l29
main_l31:
callsub isvalidbaseoptin_9
assert
gtxn 1 NumAppArgs
int 2
==
gtxn 1 NumApplications
int 1
==
&&
gtxna 1 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l34
callsub isvaliduseroptin_22
assert
callsub registeruser_25
main_l33:
int 1
return
main_l34:
callsub isvalidcreatoroptin_19
assert
callsub registerdapp_20
b main_l33
main_l35:
callsub isvalid_5
assert
int 1
return

// notiboy_address
notiboyaddress_0:
byte "sandbox"
byte "sandbox"
==
bnz notiboyaddress_0_l2
addr PMJ44TV52KSPIP6RMTPCEPXTFWKGCNQ2YDTYXQYDXU2OG7CMHZXEAN4W2E
b notiboyaddress_0_l3
notiboyaddress_0_l2:
addr EBM3V64MKXXIZ4ILJXLGJ6RDIOHXTSJ5HP7GD5MSPL2JWB34CIVE4JSOOE
notiboyaddress_0_l3:
retsub

// dapp_optin_fee
dappoptinfee_1:
byte "sandbox"
byte "sandbox"
==
bnz dappoptinfee_1_l2
int 25000000
b dappoptinfee_1_l3
dappoptinfee_1_l2:
int 1000000
dappoptinfee_1_l3:
retsub

// user_optin_fee
useroptinfee_2:
byte "sandbox"
byte "sandbox"
==
bnz useroptinfee_2_l2
int 5000000
b useroptinfee_2_l3
useroptinfee_2_l2:
int 1000000
useroptinfee_2_l3:
retsub

// is_creator_onboarded
iscreatoronboarded_3:
store 36
store 35
store 34
load 34
load 36
concat
store 37
load 37
pop
byte "notiboy"
load 35
load 37
len
box_extract
load 37
b==
retsub

// is_creator
iscreator_4:
txn Sender
global CreatorAddress
==
retsub

// is_valid
isvalid_5:
txn RekeyTo
global ZeroAddress
==
retsub

// is_valid_base_optout
isvalidbaseoptout_6:
gtxn 0 TypeEnum
int appl
==
gtxn 0 OnCompletion
int CloseOut
==
&&
retsub

// validate_rekeys
validaterekeys_7:
store 2
store 1
load 1
store 3
validaterekeys_7_l1:
load 3
load 2
<=
bz validaterekeys_7_l3
load 3
gtxns RekeyTo
global ZeroAddress
==
assert
load 3
int 1
+
store 3
b validaterekeys_7_l1
validaterekeys_7_l3:
retsub

// validate_noops
validatenoops_8:
store 5
store 4
load 4
store 6
validatenoops_8_l1:
load 6
load 5
<=
bz validatenoops_8_l3
load 4
gtxns TypeEnum
int appl
==
load 4
gtxns OnCompletion
int NoOp
==
&&
assert
load 6
int 1
+
store 6
b validatenoops_8_l1
validatenoops_8_l3:
retsub

// is_valid_base_optin
isvalidbaseoptin_9:
gtxn 1 TypeEnum
int appl
==
gtxn 1 OnCompletion
int OptIn
==
&&
retsub

// sanitize_dapp_name
sanitizedappname_10:
store 15
store 14
load 14
load 15
callsub trimstring_11
store 16
load 16
len
int 10
<
bz sanitizedappname_10_l2
byte "::::::::::"
int 0
int 10
load 16
len
-
extract3
load 16
concat
store 16
sanitizedappname_10_l2:
load 16
retsub

// trim_string
trimstring_11:
store 18
store 17
load 17
len
load 18
>
bnz trimstring_11_l2
load 17
b trimstring_11_l3
trimstring_11_l2:
load 17
int 0
load 18
extract3
trimstring_11_l3:
retsub

// load_idx_from_lstate
loadidxfromlstate_12:
store 47
load 47
global CurrentApplicationID
byte "index"
app_local_get_ex
store 49
store 48
load 49
!
bz loadidxfromlstate_12_l2
load 47
byte "index"
int 0
itob
app_local_put
loadidxfromlstate_12_l2:
load 47
byte "index"
app_local_get
retsub

// load_idx_gstate
loadidxgstate_13:
global CurrentApplicationID
byte "index"
app_global_get_ex
store 20
store 19
load 20
!
bz loadidxgstate_13_l2
byte "index"
int 0
itob
app_global_put
loadidxgstate_13_l2:
byte "index"
app_global_get
retsub

// set_idx_gstate
setidxgstate_14:
store 21
byte "index"
load 21
app_global_put
retsub

// min_val
minval_15:
store 29
store 28
load 28
load 29
>
bnz minval_15_l2
load 28
b minval_15_l3
minval_15_l2:
load 29
minval_15_l3:
retsub

// inc_msg_count
incmsgcount_16:
store 50
load 50
global CurrentApplicationID
byte "msgcount"
app_local_get_ex
store 52
store 51
load 52
!
bz incmsgcount_16_l2
load 50
byte "msgcount"
int 0
itob
app_local_put
incmsgcount_16_l2:
load 50
byte "msgcount"
load 50
byte "msgcount"
app_local_get
btoi
int 1
+
itob
app_local_put
retsub

// write_to_box
writetobox_17:
store 26
store 25
store 24
store 23
store 22
load 23
btoi
load 25
*
store 27
load 26
int 0
==
bz writetobox_17_l2
load 22
load 27
load 25
box_extract
byte
int 0
load 25
extract3
==
assert
writetobox_17_l2:
load 22
load 27
byte
int 0
load 25
extract3
box_replace
load 22
load 27
load 24
int 0
load 25
load 24
len
callsub minval_15
extract3
box_replace
retsub

// is_valid_creator_optout
isvalidcreatoroptout_18:
int 0
int 4
callsub validaterekeys_7
int 1
int 4
callsub validatenoops_8
global GroupSize
int 5
==
retsub

// is_valid_creator_optin
isvalidcreatoroptin_19:
int 0
int 5
callsub validaterekeys_7
int 2
int 5
callsub validatenoops_8
byte "sandbox"
byte "sandbox"
==
bnz isvalidcreatoroptin_19_l2
gtxn 0 TypeEnum
int axfer
==
gtxn 0 AssetReceiver
callsub notiboyaddress_0
==
&&
assert
b isvalidcreatoroptin_19_l3
isvalidcreatoroptin_19_l2:
gtxn 0 TypeEnum
int pay
==
gtxn 0 Receiver
callsub notiboyaddress_0
==
&&
assert
isvalidcreatoroptin_19_l3:
global GroupSize
int 6
==
retsub

// register_dapp
registerdapp_20:
txna ApplicationArgs 1
int 10
callsub sanitizedappname_10
store 7
txna Applications 1
app_params_get AppCreator
store 9
store 8
txn NumAppArgs
int 2
==
txn NumApplications
int 1
==
&&
txna ApplicationArgs 0
byte "dapp"
==
&&
load 9
&&
load 8
txn Sender
==
&&
assert
byte "sandbox"
byte "sandbox"
==
bnz registerdapp_20_l2
txna Assets 0
asset_params_get AssetName
store 11
store 10
txn NumAssets
int 1
==
gtxn 0 AssetAmount
callsub dappoptinfee_1
>=
&&
load 10
byte "USDC"
==
&&
assert
b registerdapp_20_l3
registerdapp_20_l2:
gtxn 0 Amount
callsub dappoptinfee_1
>=
assert
registerdapp_20_l3:
callsub loadidxgstate_13
btoi
int 1
+
int 32768
int 19
/
%
itob
store 12
load 12
callsub setidxgstate_14
load 7
txna Applications 1
itob
concat
byte "u"
concat
store 13
txn Sender
byte "whoami"
load 13
app_local_put
byte "notiboy"
load 12
load 13
int 19
int 0
callsub writetobox_17
int 1
return

// deregister_dapp
deregisterdapp_21:
txna Applications 1
app_params_get AppCreator
store 32
store 31
txn NumAppArgs
int 3
==
txn NumApplications
int 1
==
&&
txna ApplicationArgs 0
byte "dapp"
==
&&
load 32
&&
load 31
txn Sender
==
&&
assert
txna ApplicationArgs 1
int 10
callsub sanitizedappname_10
store 30
txna ApplicationArgs 2
btoi
int 19
*
store 33
load 30
load 33
txna Applications 1
itob
callsub iscreatoronboarded_3
bnz deregisterdapp_21_l2
int 0
return
deregisterdapp_21_l2:
byte "notiboy"
load 33
byte
extract 0 19
box_replace
retsub

// is_valid_user_optin
isvaliduseroptin_22:
int 0
int 2
callsub validaterekeys_7
int 2
int 2
callsub validatenoops_8
global GroupSize
int 3
==
gtxn 0 TypeEnum
int pay
==
&&
gtxn 0 Receiver
callsub notiboyaddress_0
==
&&
retsub

// is_valid_user_optout
isvaliduseroptout_23:
int 0
int 1
callsub validaterekeys_7
int 1
int 1
callsub validatenoops_8
global GroupSize
int 2
==
retsub

// deregister_user
deregisteruser_24:
gtxn 0 Sender
box_del
assert
int 1
return

// register_user
registeruser_25:
gtxn 1 NumAppArgs
int 1
==
gtxna 1 ApplicationArgs 0
byte "user"
==
&&
gtxn 0 Amount
callsub useroptinfee_2
>=
&&
assert
gtxn 0 Sender
int 14336
box_create
assert
txn Sender
byte "msgcount"
int 0
itob
app_local_put
txn Sender
byte "index"
int 0
itob
app_local_put
int 1
return

// is_channel_valid_for_verification
ischannelvalidforverification_26:
int 0
int 4
callsub validaterekeys_7
int 0
int 4
callsub validatenoops_8
txna ApplicationArgs 1
int 10
callsub sanitizedappname_10
store 38
txna ApplicationArgs 2
btoi
int 19
*
store 39
global GroupSize
int 5
==
txn NumAppArgs
int 3
==
&&
txn NumApplications
int 1
==
&&
callsub iscreator_4
&&
load 38
load 39
txna Applications 1
itob
callsub iscreatoronboarded_3
&&
retsub

// set_verify_bit
setverifybit_27:
store 40
txna ApplicationArgs 1
int 10
callsub sanitizedappname_10
store 41
load 41
txna Applications 1
itob
concat
txna ApplicationArgs 2
extract 4 4
concat
load 40
concat
store 42
byte "notiboy"
txna ApplicationArgs 2
load 42
int 19
int 1
callsub writetobox_17
int 1
return

// mark_channel_verified
markchannelverified_28:
byte "v"
callsub setverifybit_27
retsub

// mark_channel_unverified
markchannelunverified_29:
byte "u"
callsub setverifybit_27
retsub

// is_valid_private_notification
isvalidprivatenotification_30:
int 0
int 1
callsub validatenoops_8
int 0
int 1
callsub validaterekeys_7
txna Accounts 1
global CurrentApplicationID
app_opted_in
txna Accounts 1
txna Applications 1
app_opted_in
&&
txn Sender
global CurrentApplicationID
app_opted_in
&&
txn NumAccounts
int 1
==
&&
txn NumAppArgs
int 3
==
&&
txn NumApplications
int 1
==
&&
global GroupSize
int 2
==
&&
retsub

// is_valid_public_notification
isvalidpublicnotification_31:
global GroupSize
int 1
==
txn NumAppArgs
int 1
==
&&
txn NumApplications
int 1
==
&&
txn RekeyTo
global ZeroAddress
==
&&
txn TypeEnum
int appl
==
&&
txn OnCompletion
int NoOp
==
&&
txn Sender
global CurrentApplicationID
app_opted_in
&&
retsub

// send_public_msg
sendpublicmsg_32:
txna Applications 1
app_params_get AppCreator
store 44
store 43
txn Sender
byte "whoami"
app_local_get
store 45
load 45
byte ""
!=
load 44
&&
load 43
txn Sender
==
&&
assert
txn Sender
callsub loadidxfromlstate_12
btoi
int 1
+
int 13
%
itob
store 46
txn Sender
load 46
app_local_del
txn Sender
byte "index"
load 46
app_local_put
txn Sender
callsub incmsgcount_16
txn Sender
load 46
txn Note
int 120
callsub trimstring_11
app_local_put
retsub

// send_personal_msg
sendpersonalmsg_33:
txn Sender
byte "whoami"
app_local_get
store 53
txna Applications 1
app_params_get AppCreator
store 55
store 54
load 53
byte ""
!=
load 55
&&
load 54
txn Sender
==
&&
assert
txna Accounts 1
callsub loadidxfromlstate_12
btoi
int 1
+
int 14336
int 296
/
%
itob
store 56
txna Accounts 1
byte "index"
load 56
app_local_put
txn Sender
callsub incmsgcount_16
txna Accounts 1
callsub incmsgcount_16
global LatestTimestamp
itob
txna Applications 1
itob
concat
txn Note
int 0
int 280
txn Note
len
callsub minval_15
extract3
concat
store 57
txna Accounts 1
load 56
load 57
int 296
int 1
callsub writetobox_17
retsub