#pragma version 8
txn ApplicationID
int 0
==
bnz main_l33
txn OnCompletion
int OptIn
==
bnz main_l29
txn OnCompletion
int CloseOut
==
bnz main_l25
txn OnCompletion
int UpdateApplication
==
bnz main_l24
txn OnCompletion
int DeleteApplication
==
bnz main_l23
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txn NumAppArgs
int 0
==
bnz main_l22
txna ApplicationArgs 0
byte "bootstrap"
==
bnz main_l18
txna ApplicationArgs 0
byte "test"
==
bnz main_l17
txna ApplicationArgs 0
byte "pub_notify"
==
bnz main_l16
txna ApplicationArgs 0
byte "pvt_notify"
==
bnz main_l15
txna ApplicationArgs 0
byte "verify"
==
bnz main_l14
err
main_l14:
callsub isvalid_1
txn NumAppArgs
int 2
==
&&
txn NumAccounts
int 1
==
&&
txna Accounts 1
global CurrentApplicationID
app_opted_in
&&
callsub iscreator_0
&&
txna ApplicationArgs 1
app_global_get
len
int 65
>=
&&
txna ApplicationArgs 1
app_global_get
extract 33 32
txna Accounts 1
==
&&
assert
callsub markdappverified_22
return
main_l15:
callsub isvalidprivatenotification_11
assert
gtxn 0 NumAccounts
int 1
==
assert
txna Accounts 1
global CurrentApplicationID
app_opted_in
assert
txna Accounts 1
callsub loadidxfromlstate_24
btoi
int 1
+
int 32
%
itob
store 0
txna Accounts 1
load 0
app_local_del
txna Accounts 1
byte "index"
load 0
app_local_put
txn Sender
callsub incmsgcount_23
txna Accounts 1
callsub incmsgcount_23
callsub constructmsg_28
store 1
load 0
load 1
callsub writemsg_29
int 1
return
main_l16:
callsub isvalidpublicnotification_14
assert
callsub sendpublicmsg_15
int 1
return
main_l17:
byte "notiboy"
box_del
pop
int 1
return
main_l18:
callsub isvalid_1
assert
callsub iscreator_0
assert
byte "index"
int 0
itob
app_global_put
byte "notiboy"
int 32768
box_create
assert
int 0
store 2
main_l19:
load 2
int 32
<
bnz main_l21
int 1
return
main_l21:
byte "notiboy"
load 2
int 1024
*
byte
int 0
int 1024
extract3
box_replace
load 2
int 1
+
store 2
b main_l19
main_l22:
int 1
return
main_l23:
callsub isvalid_1
assert
callsub iscreator_0
return
main_l24:
callsub isvalid_1
assert
callsub iscreator_0
return
main_l25:
callsub isvalidbaseoptout_3
assert
gtxn 0 NumAppArgs
int 4
==
gtxn 0 NumApplications
int 1
==
&&
gtxna 0 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l28
callsub isvaliduseroptout_4
assert
callsub deregisteruser_19
main_l27:
int 1
return
main_l28:
callsub isvalidcreatoroptout_5
assert
callsub deregisterdapp_18
b main_l27
main_l29:
callsub isvalidbaseoptin_8
assert
gtxn 1 NumAppArgs
int 3
==
gtxn 1 NumApplications
int 1
==
&&
gtxna 1 ApplicationArgs 0
byte "dapp"
==
&&
bnz main_l32
callsub isvaliduseroptin_9
assert
callsub registeruser_20
main_l31:
int 1
return
main_l32:
callsub isvalidcreatoroptin_10
assert
callsub registerdapp_16
b main_l31
main_l33:
callsub isvalid_1
assert
int 1
return

// is_creator
iscreator_0:
txn Sender
global CreatorAddress
==
retsub

// is_valid
isvalid_1:
txn RekeyTo
global ZeroAddress
==
retsub

// sender_from_gstate
senderfromgstate_2:
store 9
load 9
app_global_get
extract 0 32
retsub

// is_valid_base_optout
isvalidbaseoptout_3:
int 0
int 3
callsub validaterekeys_6
int 1
int 3
callsub validatenoops_7
gtxn 0 TypeEnum
int appl
==
gtxn 0 OnCompletion
int CloseOut
==
&&
retsub

// is_valid_user_optout
isvaliduseroptout_4:
global GroupSize
int 4
==
retsub

// is_valid_creator_optout
isvalidcreatoroptout_5:
gtxn 4 RekeyTo
global ZeroAddress
==
global GroupSize
int 5
==
&&
gtxn 4 TypeEnum
int appl
==
&&
gtxn 4 OnCompletion
int NoOp
==
&&
retsub

// validate_rekeys
validaterekeys_6:
store 4
store 3
load 3
store 5
validaterekeys_6_l1:
load 5
load 4
<=
bz validaterekeys_6_l3
load 5
gtxns RekeyTo
global ZeroAddress
==
assert
load 5
int 1
+
store 5
b validaterekeys_6_l1
validaterekeys_6_l3:
retsub

// validate_noops
validatenoops_7:
store 7
store 6
load 6
store 8
validatenoops_7_l1:
load 8
load 7
<=
bz validatenoops_7_l3
load 6
gtxns TypeEnum
int appl
==
load 6
gtxns OnCompletion
int NoOp
==
&&
assert
load 8
int 1
+
store 8
b validatenoops_7_l1
validatenoops_7_l3:
retsub

// is_valid_base_optin
isvalidbaseoptin_8:
int 0
int 4
callsub validaterekeys_6
int 2
int 4
callsub validatenoops_7
gtxn 0 TypeEnum
int pay
==
gtxn 0 Receiver
addr 3KOQUDTQAYKMXFL66Q5DS27FJJS6O3E2J3YMOC3WJRWNWJW3J4Q65POKPI
==
&&
gtxn 1 TypeEnum
int appl
==
&&
gtxn 1 OnCompletion
int OptIn
==
&&
retsub

// is_valid_user_optin
isvaliduseroptin_9:
global GroupSize
int 5
==
retsub

// is_valid_creator_optin
isvalidcreatoroptin_10:
gtxn 5 RekeyTo
global ZeroAddress
==
global GroupSize
int 6
==
&&
gtxn 5 TypeEnum
int appl
==
&&
gtxn 5 OnCompletion
int NoOp
==
&&
retsub

// is_valid_private_notification
isvalidprivatenotification_11:
int 0
int 4
callsub validatenoops_7
int 0
int 4
callsub validaterekeys_6
gtxn 0 NumAppArgs
int 2
==
global GroupSize
int 5
==
&&
gtxn 0 Sender
gtxna 0 ApplicationArgs 1
callsub senderfromgstate_2
==
&&
gtxn 0 Sender
global CurrentApplicationID
app_opted_in
int 1
==
&&
retsub

// sanitize_dapp_name
sanitizedappname_12:
store 27
store 26
load 26
load 27
callsub trimstring_13
store 28
load 28
len
int 10
<
bz sanitizedappname_12_l2
byte "::::::::::"
int 0
int 10
load 28
len
-
extract3
load 28
concat
store 28
sanitizedappname_12_l2:
load 28
retsub

// trim_string
trimstring_13:
store 14
store 13
load 13
len
load 14
>
bnz trimstring_13_l2
load 13
b trimstring_13_l3
trimstring_13_l2:
load 13
int 0
load 14
extract3
trimstring_13_l3:
retsub

// is_valid_public_notification
isvalidpublicnotification_14:
global GroupSize
int 1
==
txn NumAppArgs
int 1
==
&&
txn NumApplications
int 1
==
&&
txn RekeyTo
global ZeroAddress
==
&&
txn TypeEnum
int appl
==
&&
txn OnCompletion
int NoOp
==
&&
retsub

// send_public_msg
sendpublicmsg_15:
txna Applications 1
app_params_get AppCreator
store 11
store 10
load 11
load 10
txn Sender
==
&&
txn Sender
global CurrentApplicationID
app_opted_in
&&
assert
txn Sender
callsub loadidxfromlstate_24
btoi
int 1
+
int 14
%
itob
store 12
txn Sender
load 12
app_local_del
txn Sender
byte "index"
load 12
app_local_put
txn Sender
callsub incmsgcount_23
txn Sender
load 12
txn Note
int 120
callsub trimstring_13
app_local_put
retsub

// register_dapp
registerdapp_16:
gtxna 1 ApplicationArgs 1
int 10
callsub sanitizedappname_12
store 21
txna Applications 1
app_params_get AppCreator
store 23
store 22
gtxn 1 NumAppArgs
int 3
==
gtxn 1 NumApplications
int 1
==
&&
gtxna 1 ApplicationArgs 0
byte "dapp"
==
&&
load 23
&&
load 22
gtxn 1 Sender
==
&&
gtxn 0 Amount
int 1000000
>=
&&
assert
callsub loadidxgstate_25
btoi
int 1
+
int 32768
int 23
/
%
itob
store 24
load 24
callsub setidxgstate_26
load 21
txna Applications 1
itob
concat
load 24
extract 4 4
concat
byte "u"
concat
store 25
byte "notiboy"
load 24
load 25
int 23
int 0
callsub writetobox_30
int 1
return

// is_creator_onboarded
iscreatoronboarded_17:
store 46
store 45
store 44
load 44
load 46
concat
store 47
load 47
pop
byte "notiboy"
load 45
load 47
len
box_extract
load 47
b==
retsub

// deregister_dapp
deregisterdapp_18:
txna Applications 1
app_params_get AppCreator
store 42
store 41
txn NumAppArgs
int 4
==
txn NumApplications
int 1
==
&&
txna ApplicationArgs 0
byte "dapp"
==
&&
load 42
&&
load 41
txn Sender
==
&&
assert
txna ApplicationArgs 1
int 10
callsub sanitizedappname_12
store 40
txna ApplicationArgs 3
btoi
int 23
*
store 43
load 40
load 43
txna Applications 1
itob
callsub iscreatoronboarded_17
bnz deregisterdapp_18_l2
int 0
return
deregisterdapp_18_l2:
byte "notiboy"
load 43
byte
extract 0 23
box_replace
retsub

// deregister_user
deregisteruser_19:
gtxn 0 Sender
box_del
assert
int 1
return

// register_user
registeruser_20:
gtxn 1 NumAppArgs
int 1
==
gtxna 1 ApplicationArgs 0
byte "user"
==
&&
gtxn 0 Amount
int 1000000
>=
&&
assert
gtxn 0 Sender
int 32768
box_create
assert
txn Sender
byte "msgcount"
int 0
itob
app_local_put
txn Sender
byte "index"
int 0
itob
app_local_put
int 1
return

// is_verified
isverified_21:
txna ApplicationArgs 1
app_global_get
len
int 65
==
bnz isverified_21_l4
txna ApplicationArgs 1
app_global_get
len
int 67
==
txna ApplicationArgs 1
app_global_get
extract 66 1
byte "v"
==
&&
bnz isverified_21_l3
int 0
b isverified_21_l5
isverified_21_l3:
int 1
b isverified_21_l5
isverified_21_l4:
int 0
isverified_21_l5:
retsub

// mark_dapp_verified
markdappverified_22:
txna ApplicationArgs 1
app_global_get
store 48
callsub isverified_21
!
bz markdappverified_22_l2
txna ApplicationArgs 1
app_global_del
txna ApplicationArgs 1
load 48
byte ":v"
concat
app_global_put
int 1
return
markdappverified_22_l2:
int 1
return

// inc_msg_count
incmsgcount_23:
store 15
load 15
global CurrentApplicationID
byte "msgcount"
app_local_get_ex
store 17
store 16
load 17
!
bz incmsgcount_23_l2
load 15
byte "msgcount"
int 0
itob
app_local_put
incmsgcount_23_l2:
load 15
byte "msgcount"
load 15
byte "msgcount"
app_local_get
btoi
int 1
+
itob
app_local_put
retsub

// load_idx_from_lstate
loadidxfromlstate_24:
store 18
load 18
global CurrentApplicationID
byte "index"
app_local_get_ex
store 20
store 19
load 20
!
bz loadidxfromlstate_24_l2
load 18
byte "index"
int 0
itob
app_local_put
loadidxfromlstate_24_l2:
load 18
byte "index"
app_local_get
retsub

// load_idx_gstate
loadidxgstate_25:
global CurrentApplicationID
byte "index"
app_global_get_ex
store 30
store 29
load 30
!
bz loadidxgstate_25_l2
byte "index"
int 0
itob
app_global_put
loadidxgstate_25_l2:
byte "index"
app_global_get
retsub

// set_idx_gstate
setidxgstate_26:
store 31
byte "index"
load 31
app_global_put
retsub

// min_val
minval_27:
store 39
store 38
load 38
load 39
>
bnz minval_27_l2
load 38
b minval_27_l3
minval_27_l2:
load 39
minval_27_l3:
retsub

// construct_msg
constructmsg_28:
global LatestTimestamp
itob
gtxna 0 ApplicationArgs 1
concat
byte ":"
concat
gtxn 0 Note
int 0
int 1008
gtxn 0 Note
len
callsub minval_27
extract3
concat
retsub

// write_msg
writemsg_29:
store 50
store 49
load 49
btoi
int 1024
*
store 51
gtxna 0 Accounts 1
load 51
byte
int 0
byte
len
extract3
box_replace
gtxna 0 Accounts 1
load 51
load 50
box_replace
retsub

// write_to_box
writetobox_30:
store 36
store 35
store 34
store 33
store 32
load 33
btoi
load 35
*
store 37
load 36
int 0
==
bz writetobox_30_l2
load 32
load 37
load 35
box_extract
byte "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
int 0
load 35
extract3
==
assert
writetobox_30_l2:
load 32
load 37
byte
int 0
load 35
extract3
box_replace
load 32
load 37
load 34
int 0
load 35
load 34
len
callsub minval_27
extract3
box_replace
retsub